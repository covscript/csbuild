name: schedule

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master
  schedule:
    - cron:  '0 */4 * * *'

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ ubuntu-latest, windows-latest ]

    steps:
      - name: Checkout
        uses: actions/checkout@master

      - name: Build on Ubuntu
        if: matrix.os == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install -y unixodbc unixodbc-dev libcurl4-openssl-dev libglfw3-dev
          bash auto-build.sh
          bash package_tools/deb/make.sh
          cp *.deb covscript-amd64.deb
      
      - name: Download MinGW-w64
        if: matrix.os == 'windows-latest'
        uses: i3h/download-release-asset@v1.2.0
        with:
          owner: covscript-archives
          repo: mingw-w64
          tag: gcc-10.2.0-mingw-w64-8.0.0-r8
          file: gcc-10.2.0-mingw-w64-8.0.0-r8-covscript.org.zip
          
      - name: Download Wix Toolset
        if: matrix.os == 'windows-latest'
        uses: i3h/download-release-asset@v1.2.0
        with:
          owner: wixtoolset
          repo: wix3
          tag: wix3112rtm
          file: wix311-binaries.zip
          
      - name: Install Toolset in Windows
        if: matrix.os == 'windows-latest'
        run: |
          7z x gcc-10.2.0-mingw-w64-8.0.0-r8-covscript.org.zip -oC:\
          7z x wix311-binaries.zip -oC:\Wix
          cat $GITHUB_ENV > ./Old_Env.txt
          echo "C:\mingw-w64\bin;C:\Wix;" > $GITHUB_ENV
          cat ./Old_Env.txt >> $GITHUB_ENV
          
      - name: Build on Windows
        if: matrix.os == 'windows-latest'
        run: |
          ./auto-build.bat
          ./package_tools/wix/make.bat
          cp *.msi covscript-amd64.msi
          
      - name: Run tests on Ubuntu
        if: matrix.os == 'ubuntu-latest'
        run: |
          sudo dpkg -i covscript-amd64.deb
          cs -v
          cs_dbg -v
          cspkg install --import
          cspkg list
          cd build-cache/covscript/examples
          cs benchmark.csc

      - name: Automatic Release MSI
        if: matrix.os == 'windows-latest'
        uses: marvinpinto/action-automatic-releases@master
        with:
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          automatic_release_tag: "windows-schedule"
          title: "Windows Schedule Build"
          prerelease: false
          files: |
            *.msi
      
      - name: Automatic Release DEB
        if: matrix.os == 'ubuntu-latest'
        uses: marvinpinto/action-automatic-releases@master
        with:
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          automatic_release_tag: "ubuntu-schedule"
          title: "Ubuntu Schedule Build"
          prerelease: false
          files: |
            *.deb
