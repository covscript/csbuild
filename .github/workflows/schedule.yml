name: schedule

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master
  schedule:
    - cron:  '0 */4 * * *'

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ ubuntu-latest, windows-latest ]

    steps:
      - name: Checkout
        uses: actions/checkout@master

      - name: Build on Ubuntu
        if: matrix.os == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install -y unixodbc unixodbc-dev libcurl4-openssl-dev libglfw3-dev
          bash auto-build.sh
          bash package_tools/deb/make.sh
          cp *.deb covscript-amd64.deb
      
      - name: Download MinGW-w64
        if: matrix.os == 'windows-latest'
        uses: i3h/download-release-asset@v1.2.0
        with:
          owner: covscript-archives
          repo: mingw-w64
          tag: gcc-11.3.0-mingw-w64-10.0.0-r3
          file: gcc-11.3.0-mingw-w64-10.0.0-r3-covscript.org.zip
          
      - name: Download Wix Toolset
        if: matrix.os == 'windows-latest'
        uses: i3h/download-release-asset@v1.2.0
        with:
          owner: wixtoolset
          repo: wix3
          tag: wix3112rtm
          file: wix311-binaries.zip
          
      - name: Install Toolset in Windows
        if: matrix.os == 'windows-latest'
        run: |
          rm C:/ProgramData/chocolatey/bin/gcc.exe -force
          rm C:/ProgramData/chocolatey/bin/g++.exe -force
          rm C:/Strawberry/c/bin/gcc.exe -force
          rm C:/Strawberry/c/bin/g++.exe -force
          7z x gcc-11.3.0-mingw-w64-10.0.0-r3-covscript.org.zip -oC:\
          7z x wix311-binaries.zip -oC:\Wix
          
      - name: Build on Windows
        if: matrix.os == 'windows-latest'
        run: |
          .github/workflows/build.bat
          cp *.msi covscript-amd64.msi
          
      - name: Run tests on Ubuntu
        if: matrix.os == 'ubuntu-latest'
        run: |
          sudo dpkg -i covscript-amd64.deb
          cs -v
          cs_dbg -v
          cspkg install --import
          cspkg list
          cd build-cache/covscript/examples
          cs benchmark.csc
          
      - name: Package CSPKG Repo on Ubuntu
        if: matrix.os == 'ubuntu-latest'
        uses: montudor/action-zip@v0.1.1
        with:
          args: zip -qq -r cspkg-repo.zip cspkg-repo
          
      - name: Package Build files on Ubuntu
        if: matrix.os == 'ubuntu-latest'
        uses: montudor/action-zip@v0.1.1
        with:
          args: zip -qq -r covscript-linux.zip build
          
      - name: Package CSPKG Repo and Build files on Windows
        if: matrix.os == 'windows-latest'
        run: |
          7z a -mmt4 -mx9 cspkg-repo.7z cspkg-repo
          7z a -mmt4 -mx9 covscript-win32.7z build

      - name: Automatic Release MSI
        if: matrix.os == 'windows-latest'
        uses: marvinpinto/action-automatic-releases@master
        with:
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          automatic_release_tag: "windows-schedule"
          title: "Windows Schedule Build"
          prerelease: false
          files: |
            *.msi
            *.7z
      
      - name: Automatic Release DEB
        if: matrix.os == 'ubuntu-latest'
        uses: marvinpinto/action-automatic-releases@master
        with:
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          automatic_release_tag: "ubuntu-schedule"
          title: "Ubuntu Schedule Build"
          prerelease: false
          files: |
            *.deb
            *.zip
